# -*- coding: utf-8 -*-
"""Wine-Quality-Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v6YqRHr3BcC-yVpaFDQtJ9ocwJTPcuox
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

df = pd.read_csv('winequality-red.csv')

df.head()

df.shape

df.info()

df.duplicated().sum()

df.isnull().sum()

df = df.drop_duplicates(keep='last')

df.duplicated().sum()

df.head()

df.isnull().sum()

df.describe()

df.corr()['quality']

sn.catplot(x='quality', data=df, kind='count')

plot = plt.figure(figsize = (15,8))
sn.barplot(x='quality', y = 'volatile acidity', data = df)

plot = plt.figure(figsize = (15,8))
sn.heatmap(df.corr(), annot=True, cmap="YlGnBu")

x = df.drop('quality', axis=1)

x

y = df['quality'].apply(lambda y_v: 1 if y_v >=7 else 0)

y

x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=4)

print(y.shape, y_train.shape, y_test.shape)

"""#RandomForest Classifier"""

m = RandomForestClassifier()

m.fit(x_train, y_train)

x_test_predict = m.predict(x_test)
test_data_accuracy = accuracy_score(x_test_predict,y_test)

print("Accuracy: ", test_data_accuracy)

input = (7.3,0.65,0.0,1.2,0.065,15.0,21.0,0.9946,3.39,0.47,10.0)
input_np = np.asarray(input)

input_np_reshape = input_np.reshape(1,-1)

predict = m.predict(input_np_reshape)
print(predict)

if (predict[0]==1):
  print("Good Quality wine")
else:
  print("Bad Quality wine")

